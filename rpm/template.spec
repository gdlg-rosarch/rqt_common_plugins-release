Name:           ros-hydro-rqt-common-plugins
Version:        0.3.12
Release:        0%{?dist}
Summary:        ROS rqt_common_plugins package

Group:          Development/Libraries
License:        BSD
URL:            http://ros.org/wiki/rqt_common_plugins
Source0:        %{name}-%{version}.tar.gz

BuildArch:      noarch

Requires:       ros-hydro-rqt-action
Requires:       ros-hydro-rqt-bag
Requires:       ros-hydro-rqt-bag-plugins
Requires:       ros-hydro-rqt-console
Requires:       ros-hydro-rqt-dep
Requires:       ros-hydro-rqt-graph
Requires:       ros-hydro-rqt-image-view
Requires:       ros-hydro-rqt-launch
Requires:       ros-hydro-rqt-logger-level
Requires:       ros-hydro-rqt-msg
Requires:       ros-hydro-rqt-plot
Requires:       ros-hydro-rqt-publisher
Requires:       ros-hydro-rqt-py-common
Requires:       ros-hydro-rqt-py-console
Requires:       ros-hydro-rqt-reconfigure
Requires:       ros-hydro-rqt-service-caller
Requires:       ros-hydro-rqt-shell
Requires:       ros-hydro-rqt-srv
Requires:       ros-hydro-rqt-top
Requires:       ros-hydro-rqt-topic
Requires:       ros-hydro-rqt-web
BuildRequires:  ros-hydro-catkin

%description
rqt_common_plugins metapackage provides ROS backend graphical tools suite that
can be used on/off of robot runtime. To run any rqt plugins, just type in a
single command &quot;rqt&quot;, then select any plugins you want from the GUI
that launches afterwards. rqt consists of three following metapackages: rqt -
core modules of rqt (ROS GUI) framework. rqt plugin developers barely needs to
pay attention to this metapackage. rqt_common_plugins (you're here!)
rqt_robot_plugins - rqt plugins that are particularly used with robots during
their runtime.

%prep
%setup -q

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/hydro/setup.sh" ]; then . "/opt/ros/hydro/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake .. \
        -UINCLUDE_INSTALL_DIR \
        -ULIB_INSTALL_DIR \
        -USYSCONF_INSTALL_DIR \
        -USHARE_INSTALL_PREFIX \
        -ULIB_SUFFIX \
        -DCMAKE_INSTALL_PREFIX="/opt/ros/hydro" \
        -DCMAKE_PREFIX_PATH="/opt/ros/hydro" \
        -DSETUPTOOLS_DEB_LAYOUT=OFF \
        -DCATKIN_BUILD_BINARY_PACKAGE="1" \

make %{?_smp_mflags}

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/hydro/setup.sh" ]; then . "/opt/ros/hydro/setup.sh"; fi
cd obj-%{_target_platform}
make %{?_smp_mflags} install DESTDIR=%{buildroot}

%files
/opt/ros/hydro

%changelog
* Fri Jul 24 2015 Aaron Blasdel <ablasdel@gmail.com> - 0.3.12-0
- Autogenerated by Bloom

